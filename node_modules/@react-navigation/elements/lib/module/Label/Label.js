function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import * as React from 'react';
import { StyleSheet } from 'react-native';
import { Text } from '../Text';
export function Label({
  tintColor,
  style,
  ...rest
}) {
  return /*#__PURE__*/React.createElement(Text, _extends({
    numberOfLines: 1
  }, rest, {
    style: [styles.label, tintColor != null && {
      color: tintColor
    }, style]
  }));
}
const styles = StyleSheet.create({
  label: {
    textAlign: 'center',
    backgroundColor: 'transparent'
  }
});
//# sourceMappingURL=Label.js.map